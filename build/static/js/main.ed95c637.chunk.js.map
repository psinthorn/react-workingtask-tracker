{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/Addtask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","propType","PropTypes","string","func","Header","props","onAdd","showAddCloseBtn","title","isRequired","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","curcor","Tasks","tasks","map","Addtask","useState","setText","date","setDate","setReminder","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","checked","currentTarget","App","showAddForm","setShowAddForm","setTasks","Math","floor","random","console","log","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed95c637.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick}) => {\n\n    return  <button onClick={onClick} style={{backgroundColor: color }} className='btn'>{text}</button>\n}\n\nButton.defaultProps = {\n    color: 'green',\n}\n\nButton.propType = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = (props) => {\n\n//    const onClick = () => {\n//        console.log('click button at header')\n//    }\n\n\n    return (\n        <header className='header'>\n            {/* <h1 style={headingStyle}>Task Tracker</h1> */}\n            <h1>Task Tracker</h1>\n           <Button \n            onClick={props.onAdd} \n            text={ props.showAddCloseBtn ? 'Close' : 'Add'}\n            color={ props.showAddCloseBtn ? 'red' : 'green'}      \n           />\n            {/* <h2>{props.title}</h2> */}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Working Tasking Tracker' \n}\n\nHeader.propType = {\n    title: PropTypes.string.isRequired\n}\n\n// // CSS in JS \n// const headingStyle = {\n//     color: 'red',\n//     backgroundColor: 'black',\n// }\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        \n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text}<FaTimes style={{color: 'red', curcor: 'pointer'}} onClick={() => onDelete(task.id)} /></h3>\n        </div>\n        \n    )\n}\n\nexport default Task\n","import Task from \"./Task\"\n\n\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n\treturn (\n\t\t<div>\n\t\t{tasks.map((task) => (\n\t\t\t<Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\n\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default Tasks","import {useState} from 'react'\n\nconst Addtask = ({ onAdd }) => {\n\n    const [text, setText] = useState('')\n    const [date, setDate] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    // On submit task\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        // Validate if empty task input then alert on submit\n        if(!text){\n            alert(\"Please add task.\")\n            return\n        }\n\n        // send data objects to onAdd function to process\n        onAdd({ text, date, reminder})\n\n        // clear form after sent data objects\n        setText('')\n        setDate('')\n        setReminder(false)\n    }\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n        <div className=\"form-control\">\n            <label>Add Task</label>\n            <input \n                type=\"text\" \n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                placeholder=\"what you have to do? add task.\" \n            />\n        </div>\n\n        <div className=\"form-control\">\n            <label>Date</label>\n            <input \n                type=\"text\" \n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n                placeholder=\"Due date\" />\n        </div>\n\n        <div className=\"form-control form-control-check\">\n            <label>Reminder</label>\n            <input \n                type=\"checkbox\"\n                checked={reminder}\n                value={reminder}\n                onChange={(e) => setReminder(e.currentTarget.checked)}\n            />\n\n        </div>\n\n        <div className=\"form-control\" >\n            <input type=\"submit\" className=\"btn btn-block\" value=\"Save Task\" />\n        </div>\n        </form>\n    )\n}\n\nexport default Addtask\n","import {useState} from 'react'\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport Addtask from \"./components/Addtask\"\n\nfunction App() {\n  const [showAddForm, setShowAddForm] = useState(true)\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Hello Text 1\",\n      date: \"18 Apr 2021 11:30 AM\",\n      reminder: true,\n    }, \n    {\n      id: 2,\n      text: \"Hello Text 2\",\n      date: \"18 Apr 2021 11:30 AM\",\n      reminder: true,\n    }, \n    {\n      id: 3,\n      text: \"Hello Text 3\",\n      date: \"18 Apr 2021 11:30 AM\",\n      reminder: false,\n    }, \n\n  ])\n\n  // Add taks\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    console.log(id)\n\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    console.log(id) \n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))\n  \n  }\n\n  // Delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  \n  return (\n    <div className=\"container\">\n      <header className=\"App-header\">\n       <Header onAdd={ () => setShowAddForm(!showAddForm) }  showAddCloseBtn={showAddForm} />\n\n       { showAddForm &&\n       <Addtask onAdd={addTask} />\n        }\n\n       {tasks.length > 0 ? (\n       <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n       ):(\n         'No work tasks available'\n        )}\n       \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}